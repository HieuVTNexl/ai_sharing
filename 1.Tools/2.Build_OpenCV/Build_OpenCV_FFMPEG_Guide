# Install FFPMEG dependecy
    sudo apt install libx264-dev

# Build FFMPEG
git clone https://github.com/jocover/jetson-ffmpeg.git
cd jetson-ffmpeg
mkdir build
cd build
cmake ..
make
sudo make install
sudo ldconfig
git clone git://source.ffmpeg.org/ffmpeg.git -b release/4.2 --depth=1
cd ffmpeg
wget https://github.com/jocover/jetson-ffmpeg/raw/master/ffmpeg_nvmpi.patch
git apply ffmpeg_nvmpi.patch
# For testing FFMPEG Only
#./configure --enable-nvmpi
# OpenCV FFMPEG Support
./configure --enable-shared --disable-static --prefix=/usr/local --enable-nvmpi --extra-libs='-L/usr/lib/aarch64-linux-gnu/tegra -lnvbuf_utils' --extra-cflags='-I /usr/src/jetson_multimedia_api/include/' --enable-nvmpi --enable-libx264 --enable-gpl --pkgconfigdir=/usr/local/lib/pkgconfig
make
sudo make installs

# Build OpenCV with FFMPEG
sudo apt-get install qt5-default

export OPENCV_VERSION=3.4.2
sudo apt-add-repository universe
sudo apt update
sudo apt-get install -y build-essential cmake curl python3-pip libeigen3-dev libglew-dev libgtk2.0-dev libgtk-3-dev libjpeg-dev libpng-dev libpostproc-dev libtbb-dev libtiff5-dev libv4l-dev v4l-utils libxvidcore-dev libx264-dev qt5-default zlib1g-dev libatlas-base-dev gfortran pkg-config
sudo apt-get install -y python-dev  python-numpy  python-py  python-pytest
sudo apt-get install -y python3-dev python3-numpy python3-py python3-pytest
sudo apt-get install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev 
cd $HOME
curl -L https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip -o opencv-$OPENCV_VERSION.zip
curl -L https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.zip -o opencv_contrib-$OPENCV_VERSION.zip
unzip opencv-$OPENCV_VERSION.zip
unzip opencv_contrib-$OPENCV_VERSION.zip
mv opencv-$OPENCV_VERSION opencv
mv opencv_contrib-opencv-$OPENCV_VERSION opencv_contrib
cd opencv
mkdir build
cd build
# in the following cmake configuration command set CUDA_ARCH_BIN to 5.3 for Jetson Nano and 7.2 for Jetson Xavier NX
cmake -D CMAKE_BUILD_TYPE=RELEASE -D PYTHON_DEFAULT_EXECUTABLE=/usr/bin/python3 -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_CUDA=ON -D CUDA_ARCH_BIN=7.2 -D CUDA_ARCH_PTX="" -D ENABLE_FAST_MATH=ON -D CUDA_FAST_MATH=ON -D WITH_CUDNN=ON -D OPENCV_DNN_CUDA=ON -D WITH_CUBLAS=ON -D WITH_TBB=ON -D WITH_EIGEN=ON -D WITH_LIBV4L=ON -D WITH_V4L=ON -D WITH_FFMPEG=ON -D FFMPEG_PREFIX=/usr/local -D WITH_GSTREAMER=ON -D WITH_GSTREAMER_0_10=OFF -D OPENCV_ENABLE_NONFREE=ON -D WITH_QT=ON -D WITH_OPENGL=ON -D BUILD_opencv_python3=ON -D BUILD_NEW_PYTHON_SUPPORT=ON -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules -D CPACK_BINARY_DEB=ON ..
# CUDA, FFMPEG, GST Off
cmake -D CMAKE_BUILD_TYPE=RELEASE -D PYTHON_DEFAULT_EXECUTABLE=/usr/bin/python3 -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_CUDA=OFF -D CUDA_ARCH_BIN=7.2 -D CUDA_ARCH_PTX="" -D ENABLE_FAST_MATH=ON -D CUDA_FAST_MATH=ON -D WITH_CUDNN=ON -D OPENCV_DNN_CUDA=ON -D WITH_CUBLAS=ON -D WITH_TBB=ON -D WITH_EIGEN=ON -D WITH_LIBV4L=ON -D WITH_V4L=ON -D WITH_FFMPEG=OFF -D WITH_GSTREAMER=OFF -D WITH_GSTREAMER_0_10=OFF -D OPENCV_ENABLE_NONFREE=ON -D WITH_QT=ON -D WITH_OPENGL=ON -D BUILD_opencv_python3=ON -D BUILD_NEW_PYTHON_SUPPORT=ON -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules -D CPACK_BINARY_DEB=ON ..

make -j$(nproc)
sudo make install
sudo ldconfig
# if you want to generate a package:
sudo make package -j$(nproc)


# Add this line to ~/.bashrc
export OPENBLAS_CORETYPE=ARMV8


